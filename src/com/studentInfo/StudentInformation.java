/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.studentInfo;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

import java.sql.*;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.text.DateFormat;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author paul.oamen
 */
public class StudentInformation extends javax.swing.JFrame {

    Connection sqlConn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    int q, i, id, deleteItem;

    /**
     * Creates new form StudentDBMysql
     */
    public StudentInformation() {
        this.createTable();
        initComponents();
        getCourseList();
        showGridData();
    }
    public void getCourseList() {
        ArrayList<String> courseName = new ArrayList<String>();
        courseName.add("");
        try ( Connection conn = this.connect()) {
            pst = conn.prepareStatement("select * from course");
            rs = pst.executeQuery();
            course.addItem("");
//            searchBycourse.addItem("");
            while (rs.next()) {
                if (rs.getString("course_name") != null) {
                    courseName.add(rs.getString("course_name"));
//                    course.setEnabled(true);
                    course.addItem(rs.getString("course_name"));
//                    searchBycourse.addItem(rs.getString("course_name"));
                }

            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
        
    }
    public Connection connect() {
        
        String url = "jdbc:mysql://localhost:3306/STUDENT_MANAGEMENT";
        String uname = "root";
        String pass = "";
        Connection conn = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            conn = DriverManager.getConnection(url,uname,pass);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        return conn;
    }

    public void createTable() {
        try {
            Statement st = this.connect().createStatement();
//            st.execute(studentTable);
//            st.execute(courseTable);
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    //===============================Function Declaration======================================

    public void showGridData() {

        try (Connection conn = this.connect()) {
            pst = conn.prepareStatement("SELECT c.duration,s.* from  student s join course c on s.coursename = c.course_name");
            rs = pst.executeQuery();
            ResultSetMetaData StData = rs.getMetaData();
            q = StData.getColumnCount();
            DefaultTableModel RecordTable = (DefaultTableModel) jTable1.getModel();
            RecordTable.setRowCount(0);
            while (rs.next()) {

                Vector columnData = new Vector();

                for (i = 1; i <= q; i++) {
//                    columnData.add(rs.getInt("id"));
                    columnData.add(rs.getString("studentid"));
                    columnData.add(rs.getString("studentname"));
                    columnData.add(rs.getString("batch"));
                    columnData.add(rs.getString("address"));
                    columnData.add(rs.getString("gender"));
                    columnData.add(rs.getString("mobile"));
                    columnData.add("");
//                    columnData.add(rs.getString("date"));
                    columnData.add(rs.getString("bloodgroup"));
                    columnData.add(rs.getString("coursename"));
                    columnData.add(rs.getString("coursefee"));
//                    columnData.add("");
                    columnData.add(rs.getString("duration"));
                    columnData.add(rs.getString("paidamount"));
                    columnData.add(rs.getString("dueamount"));
                    columnData.add(rs.getString("status"));
                }
                RecordTable.addRow(columnData);

            }
            total.setText("" + RecordTable.getRowCount() + "");
//            searchBycourse.setSelectedIndex(0);

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void studentSearch(String studentId) {
        try (Connection conn = this.connect()) {
            pst = conn.prepareStatement("SELECT c.duration,s.* from  student s join course c on s.coursename = c.course_name where studentid = " + "'" + studentSearch.getText() + "'");
            rs = pst.executeQuery();
            ResultSetMetaData StData = rs.getMetaData();
            q = StData.getColumnCount();
            DefaultTableModel RecordTable = (DefaultTableModel) jTable1.getModel();
            RecordTable.setRowCount(0);
            while (rs.next()) {

                Vector columnData = new Vector();

                for (i = 1; i <= q; i++) {
//                    columnData.add(rs.getInt("id"));
                    columnData.add(rs.getString("studentid"));
                    columnData.add(rs.getString("studentname"));
                    columnData.add(rs.getString("batch"));
                    columnData.add(rs.getString("address"));
                    columnData.add(rs.getString("gender"));
                    columnData.add(rs.getString("mobile"));
                    columnData.add("");
//                    columnData.add(rs.getString("date"));
                    columnData.add(rs.getString("bloodgroup"));
                    columnData.add(rs.getString("coursename"));
                    columnData.add(rs.getString("coursefee"));
//                    columnData.add("");
                    columnData.add(rs.getString("duration"));
                    columnData.add(rs.getString("paidamount"));
                    columnData.add(rs.getString("dueamount"));
                    columnData.add(rs.getString("status"));
                }
                RecordTable.addRow(columnData);

            }
            total.setText("" + RecordTable.getRowCount() + "");

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void searchByCourse() {

        if ((String) searchBycourse.getSelectedItem() != " ") {
            try (Connection conn = this.connect()) {
                pst = conn.prepareStatement("SELECT c.duration,s.* from  student s join course c on s.coursename = c.course_name where coursename = " + "'" + (String) searchBycourse.getSelectedItem() + "'");
                rs = pst.executeQuery();
                ResultSetMetaData StData = rs.getMetaData();
                q = StData.getColumnCount();
                DefaultTableModel RecordTable = (DefaultTableModel) jTable1.getModel();
                RecordTable.setRowCount(0);
                while (rs.next()) {

                    Vector columnData = new Vector();

                    for (i = 1; i <= q; i++) {
//                    columnData.add(rs.getInt("id"));
                    columnData.add(rs.getString("studentid"));
                    columnData.add(rs.getString("studentname"));
                    columnData.add(rs.getString("batch"));
                    columnData.add(rs.getString("address"));
                    columnData.add(rs.getString("gender"));
                    columnData.add(rs.getString("mobile"));
                    columnData.add("");
//                    columnData.add(rs.getString("date"));
                    columnData.add(rs.getString("bloodgroup"));
                    columnData.add(rs.getString("coursename"));
                    columnData.add(rs.getString("coursefee"));
//                    columnData.add("");
                    columnData.add(rs.getString("duration"));
                    columnData.add(rs.getString("paidamount"));
                    columnData.add(rs.getString("dueamount"));
                    columnData.add(rs.getString("status"));
                    }
                    RecordTable.addRow(columnData);

                }
                total.setText("" + RecordTable.getRowCount() + "");

                //empty set
                studentId.setText("");
                studentName.requestFocus();
                studentName.setText("");
                batch.setText("");
                mobile.setText("");
                address.setText("");
                course.setSelectedIndex(0);
                gender.setSelectedIndex(0);
                status.setSelectedIndex(0);
                startDate.setText("");
                bloodGroup.setText("");
                courseFee.setText("");
                duration.setText("");
                paidAmount.setText("");
                dueAmount.setText("");
                startDate.setText("");

            } catch (SQLException e) {
                e.printStackTrace();
            }
        } else {
            showGridData();
        }
    }

  //=============================================================================================

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        stInfoBackBtn = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        total = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        searchBycourse = new javax.swing.JComboBox<>();
        totalTextField = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        studentSearch = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        studentId = new javax.swing.JTextField();
        address = new javax.swing.JTextField();
        batch = new javax.swing.JTextField();
        mobile = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        label1 = new java.awt.Label();
        gender = new javax.swing.JComboBox();
        studentName = new javax.swing.JTextField();
        duration = new javax.swing.JTextField();
        bloodGroup = new javax.swing.JTextField();
        startDate = new javax.swing.JTextField();
        courseFee = new javax.swing.JTextField();
        paidAmount = new javax.swing.JTextField();
        dueAmount = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        status = new javax.swing.JComboBox<>();
        course = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        btnPrint = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(95, 158, 160), 4));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        stInfoBackBtn.setBackground(new java.awt.Color(128, 184, 231));
        stInfoBackBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        stInfoBackBtn.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        stInfoBackBtn.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Tech Training Center");
        stInfoBackBtn.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, 920, 60));

        jPanel2.add(stInfoBackBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1340, 70));

        jPanel5.setBackground(new java.awt.Color(0, 153, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel5.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(195, 224, 252));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(95, 158, 160), 4));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setBackground(new java.awt.Color(223, 240, 250));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "Name", "Batch", "Address", "Gender", "Mobile", "Date", "Blood Group", "Course Name", "Course Fee", "Duration", "Paid", "Due", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 890, 450));

        total.setEditable(false);
        total.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        total.setToolTipText("STUDENT ID");
        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });
        jPanel1.add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 10, 60, 30));

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Search by student id");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 120, 40));

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 10, -1, -1));

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 10, -1, -1));

        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 10, -1, -1));

        searchBycourse.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchBycourse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Graphics Design", "Web Design", "Digital Marketing", "Database" }));
        searchBycourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBycourseActionPerformed(evt);
            }
        });
        jPanel1.add(searchBycourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 120, 30));

        totalTextField.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        totalTextField.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalTextField.setText("Total");
        jPanel1.add(totalTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 10, 40, 30));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel15.setText("COURSE");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 10, 60, 30));

        studentSearch.setToolTipText("STUDENT ID");
        studentSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentSearchActionPerformed(evt);
            }
        });
        jPanel1.add(studentSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 10, 160, -1));

        jPanel5.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 0, 910, 500));

        jPanel7.setBackground(new java.awt.Color(195, 224, 252));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(95, 158, 160), 4));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Mobile");
        jPanel7.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 170, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("BATCH");
        jPanel7.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 110, -1, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Address");
        jPanel7.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 140, -1, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("COURSE FEE");
        jPanel7.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 260, -1, -1));

        studentId.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        studentId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentIdActionPerformed(evt);
            }
        });
        jPanel7.add(studentId, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 270, -1));

        address.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel7.add(address, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, 270, -1));

        batch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel7.add(batch, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 270, -1));

        mobile.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileActionPerformed(evt);
            }
        });
        jPanel7.add(mobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, 270, -1));

        jLabel17.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel17.setText("STUDENT ID");
        jPanel7.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 50, -1, -1));

        label1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        label1.setName(""); // NOI18N
        label1.setText("NAME");
        jPanel7.add(label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 20, -1, -1));

        gender.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        gender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Male", "Female" }));
        gender.setToolTipText("");
        jPanel7.add(gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 380, 270, -1));

        studentName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        studentName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentNameActionPerformed(evt);
            }
        });
        jPanel7.add(studentName, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 270, -1));

        duration.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel7.add(duration, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 350, 270, -1));

        bloodGroup.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bloodGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodGroupActionPerformed(evt);
            }
        });
        jPanel7.add(bloodGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 270, -1));

        startDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        startDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startDateActionPerformed(evt);
            }
        });
        jPanel7.add(startDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, 270, -1));

        courseFee.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel7.add(courseFee, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 260, 270, -1));

        paidAmount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        paidAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paidAmountActionPerformed(evt);
            }
        });
        jPanel7.add(paidAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 290, 270, -1));

        dueAmount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel7.add(dueAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 320, 270, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("STATUS");
        jPanel7.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, -1, -1));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("BLOOD GROUP");
        jPanel7.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 200, -1, -1));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("DATE");
        jPanel7.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 230, -1, -1));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("DUE");
        jPanel7.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 320, -1, -1));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("PAID");
        jPanel7.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, -1, -1));

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText("DURATION");
        jPanel7.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, -1, -1));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setText("GENDER");
        jPanel7.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, -1, -1));

        status.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Running", "Complete", " " }));
        jPanel7.add(status, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 410, 270, -1));

        course.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        course.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseActionPerformed(evt);
            }
        });
        jPanel7.add(course, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 270, -1));

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setText("COURSE");
        jPanel7.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 80, -1, -1));

        jPanel5.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 500));

        jPanel6.setBackground(new java.awt.Color(128, 184, 231));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnPrint.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnPrint.setText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });
        jPanel6.add(btnPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 30, 90, 30));

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel6.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 30, 100, 30));

        btnReset.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        jPanel6.add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 30, 100, 30));

        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel6.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 30, 100, 30));

        btnExit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        jPanel6.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 30, 100, -1));

        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 60, -1));

        jPanel5.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 500, 1340, 80));

        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 1340, 580));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1360, 690));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 770, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 690, 770, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed

        startDate.setText("");
        mobile.setText("");
        address.setText("");
        batch.setText("");
        studentName.setText("");
        studentId.setText("");
        courseFee.setText("");
        duration.setText("");
        paidAmount.setText("");
        course.setSelectedIndex(0);
        status.setSelectedIndex(0);
        gender.setSelectedIndex(0);
        dueAmount.setText("");
        bloodGroup.setText("");
        total.setText("");
        searchBycourse.setSelectedIndex(0);
        studentSearch.setText("");

        DefaultTableModel RecordTable = (DefaultTableModel) jTable1.getModel();
        RecordTable.setRowCount(0);
        total.setText("" + 0 + "");


    }//GEN-LAST:event_btnResetActionPerformed
    private JFrame frame;
    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed

        frame = new JFrame("Exit");
        if (JOptionPane.showConfirmDialog(frame, "Confirm if you want to exit", "Student Management Systems",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnExitActionPerformed


    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        DefaultTableModel RecordTable = (DefaultTableModel) jTable1.getModel();
        int SelectedRows = jTable1.getSelectedRow();
        System.out.println("SelectedRows : " + SelectedRows);
        try (Connection conn = this.connect()) {
            //int id
            String studentID = RecordTable.getValueAt(SelectedRows, 0).toString();
//            id = Integer.parseInt(RecordTable.getValueAt(SelectedRows, 0).toString());
            System.out.println("Student id : " + studentID);
            pst = conn.prepareStatement("update student set studentid =?,studentname=?,batch=?,"
                    + "address=?,gender=?,mobile=?,bloodgroup=?,coursename=?,coursefee=?,"
                    + "paidamount=?,dueamount=?,status=? where studentId =" + "'"+studentID+"'");
            int j = 1;
            pst.setString(j++, studentId.getText());
            pst.setString(j++, studentName.getText());
            pst.setString(j++, batch.getText());
            pst.setString(j++, address.getText());
            pst.setString(j++, (String) gender.getSelectedItem());
            pst.setString(j++, mobile.getText());
//            pst.setString(j++, startDate.getText());
            pst.setString(j++, bloodGroup.getText());
            pst.setString(j++, (String) course.getSelectedItem());
            pst.setString(j++, courseFee.getText());
//            pst.setString(j++, duration.getText());
            pst.setString(j++, paidAmount.getText());
            pst.setString(j++, dueAmount.getText());
            pst.setString(j++, (String) status.getSelectedItem());

            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Student Record updated");
            showGridData();
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(StudentInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        DefaultTableModel RecordTable = (DefaultTableModel) jTable1.getModel();
        int SelectedRows = jTable1.getSelectedRow();

        studentId.setText(RecordTable.getValueAt(SelectedRows, 0).toString());
        studentName.setText(RecordTable.getValueAt(SelectedRows, 1).toString());
        course.setSelectedItem(RecordTable.getValueAt(SelectedRows, 8).toString());
        batch.setText(RecordTable.getValueAt(SelectedRows, 2).toString());
        address.setText(RecordTable.getValueAt(SelectedRows, 3).toString());
        gender.setSelectedItem(RecordTable.getValueAt(SelectedRows, 4).toString());
        mobile.setText(RecordTable.getValueAt(SelectedRows, 5).toString());
//        startDate.setText(RecordTable.getValueAt(SelectedRows, 6).toString());
        bloodGroup.setText(RecordTable.getValueAt(SelectedRows, 7).toString());
//        course.setSelectedItem(RecordTable.getValueAt(SelectedRows, 8).toString());
        courseFee.setText(RecordTable.getValueAt(SelectedRows, 9).toString());
//        duration.setText(RecordTable.getValueAt(SelectedRows, 10).toString());
        paidAmount.setText(RecordTable.getValueAt(SelectedRows, 11).toString());
        dueAmount.setText(RecordTable.getValueAt(SelectedRows, 12).toString());
        status.setSelectedItem(RecordTable.getValueAt(SelectedRows, 13).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        MessageFormat header = new MessageFormat("Printing in progress");
        MessageFormat footer = new MessageFormat("Page {0, number, integer}");

        try {
            jTable1.print(JTable.PrintMode.NORMAL, header, footer);
        } catch (java.awt.print.PrinterException e) {
            System.err.format("No Printer found", e.getMessage());
        }
    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        DefaultTableModel RecordTable = (DefaultTableModel) jTable1.getModel();
        int SelectedRows = jTable1.getSelectedRow();

        String deleteCell = "delete from student where studentid=";
        try (Connection conn = this.connect()) {

            //int deleteItem
            deleteItem = JOptionPane.showConfirmDialog(null, "Confirm if you want to delete item",
                    "Warning", JOptionPane.YES_NO_OPTION);
            if (deleteItem == JOptionPane.YES_OPTION) {
                String sid = RecordTable.getValueAt(SelectedRows, 0).toString();
                pst = conn.prepareStatement("delete from student where studentid=" + "'"+sid+ "'");
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Student Record updated");
                showGridData();

                studentId.setText("");
                studentName.requestFocus();
                studentName.setText("");
                batch.setText("");
                mobile.setText("");
                address.setText("");
                course.setSelectedIndex(0);
                gender.setSelectedIndex(0);
                status.setSelectedIndex(0);
                startDate.setText("");
                bloodGroup.setText("");
                courseFee.setText("");
                duration.setText("");
                paidAmount.setText("");
                dueAmount.setText("");
                startDate.setText("");
                total.setText("");
            }
            total.setText("" + RecordTable.getRowCount() + "");

        } catch (SQLException e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void studentIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentIdActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        studentSearch(total.getText());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        showGridData();
        studentId.setText("");
        studentName.requestFocus();
        studentName.setText("");
        batch.setText("");
        mobile.setText("");
        address.setText("");
        course.setSelectedIndex(0);
        gender.setSelectedIndex(0);
        status.setSelectedIndex(0);
        startDate.setText("");
        bloodGroup.setText("");
        courseFee.setText("");
        duration.setText("");
        paidAmount.setText("");
        dueAmount.setText("");
        startDate.setText("");
//        searchBycourse.setSelectedIndex(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
//        total.setText("");
        studentSearch.setText("");

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        EnrollStudents est = new EnrollStudents();
        est.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void studentNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentNameActionPerformed

    private void bloodGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bloodGroupActionPerformed

    private void startDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startDateActionPerformed

    private void mobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileActionPerformed

    private void studentSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentSearchActionPerformed

    private void searchBycourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBycourseActionPerformed
        searchByCourse();
    }//GEN-LAST:event_searchBycourseActionPerformed

    private void paidAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paidAmountActionPerformed
        String paidAmt = paidAmount.getText();
        String feeAmt = courseFee.getText();
        if (paidAmt != null) {
            if (Integer.parseInt(feeAmt) < Integer.parseInt(paidAmt)) {
                JOptionPane.showMessageDialog(null, "Paid amount should not be greater than Due amount");
            } else {
                int dueAmt = Integer.parseInt(feeAmt) - Integer.parseInt(paidAmt);
                dueAmount.setText("" + dueAmt + "");
            }
        }
    }//GEN-LAST:event_paidAmountActionPerformed

    private void courseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseActionPerformed
        try (Connection conn = this.connect()) {
            if ((String) course.getSelectedItem() == "" || (String) course.getSelectedItem() == null) {
                duration.setText("");
                courseFee.setText("");
            } else {
                pst = conn.prepareStatement("select * from course where course_name = " + "'" + (String) course.getSelectedItem() + "'");
                rs = pst.executeQuery();
                ResultSetMetaData StData = rs.getMetaData();
                q = StData.getColumnCount();
                while (rs.next()) {
                    for (i = 1; i <= q; i++) {
                        duration.setText(rs.getString("duration"));
                        courseFee.setText(rs.getString("fee"));
                    }

                }
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_courseActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(StudentInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(StudentInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(StudentInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(StudentInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new StudentInformation().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    private javax.swing.JTextField batch;
    private javax.swing.JTextField bloodGroup;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> course;
    private javax.swing.JTextField courseFee;
    private javax.swing.JTextField dueAmount;
    private javax.swing.JTextField duration;
    private javax.swing.JComboBox gender;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private java.awt.Label label1;
    private javax.swing.JTextField mobile;
    private javax.swing.JTextField paidAmount;
    private javax.swing.JComboBox<String> searchBycourse;
    private javax.swing.JPanel stInfoBackBtn;
    private javax.swing.JTextField startDate;
    private javax.swing.JComboBox<String> status;
    private javax.swing.JTextField studentId;
    private javax.swing.JTextField studentName;
    private javax.swing.JTextField studentSearch;
    private javax.swing.JTextField total;
    private javax.swing.JLabel totalTextField;
    // End of variables declaration//GEN-END:variables
}
